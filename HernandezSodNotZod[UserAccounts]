//AUTHOR:DavidHernandez
//COURSE:CPT187
//PURPOSE:The purpose of UserAccounts is to hold the users info and their passwords that can be entered so access their accounts
//CREATEDATE:April 20, 2021
package edu.cpt187.hernandez.exercise6;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

public class UserAccounts 
{
	//Beginning of Attributes
	
	private int NOT_FOUND = -1;
	private int RESET_VALUE = 0;
	private int MAXIMUM_RECORDS = 50;
	
	private String[] userNames;
	private String[] passwords;
	
	private String masterFileName;
	private int recordCount;
	private int searchedIndex;
	
	//End of Attributes
	
	//Constructor
	UserAccounts(String borrowedFileName)
	{
		masterFileName = borrowedFileName;
	}//End of Constructor
	
	//Setters
	
	//Setter UserAccountArrays to assign value for borrowed
	public void setUserAccountArrays()
	{
		userNames = String.valueOf(searchedIndex);
	}//End of setter to assign a new value to setUserAccountArrays
	
	//Setter SearchIndex to assign value for borrowed
	public void setSearchIndex(String borrowedUserName)
	{
		searchedIndex = getSeqSearch(borrowedUserName);
	}//End of setter to assign a new value to setSearchIndex
	
	//Setter SearchIndex to assign value for borrowed
	public void setSearchedIndex(String borrowedUserName, String borrowedPassword)
	{
		searchedIndex = getSeqSearch(borrowedUserName);
		
		//Test if searchedIndes is >= RESET_VALUE and getPasswordMatch is false
		if (searchedIndex >= RESET_VALUE && getPasswordMatch(borrowedPassword) == false)
		{
			searchedIndex = NOT_FOUND;
		}//End of Test if searchedIndes is >= RESET_VALUE and getPasswordMatch is false
	}//End of setter to assign a new value to setSearchIndex
	
	//Setter WriteOneRecord to assign value for borrowed
	public void setWriteOneRecord(String borrowedUserName, String borrowedPassword)
	{
		//Beginning of Try
		try
		{
			PrintWriter filePW = new PrintWriter (new FileWriter(borrowedUserName, false));
			
			filePW.printf("%n%s\t%s", borrowedUserName, borrowedPassword);
			
			filePW.close();
		}//End of Try
		
		//Beginning of Catch
		catch (IOException ex)
		{
			System.out.println("Could not find" + ex);
		}//End of Catch
	}//End of setter to assign a new value to setSearchIndex
	
	//End of Setters
	
	//Getters
	
	//Getter to Return the value of seqSearch
	public int getSeqSearch(String borrowedBorrowedUserName)
	{
		return userNames.equalsIgnoreCase(borrowedBorrowedUserName);
	}//End of getSeqSearch
	
	//Getter to Return the value of passwordMatch
	public boolean getPasswordMatch(String borrowedBorrowedPassword)
	{
		return passwords.equals(borrowedBorrowedPassword);
	}//End of getPasswordMatch
	
	//Getter to Return the value of filaName
	public String getFileName()
	{
		return masterFileName;
	}//End of getFileName
	
	//Getter to Return the value of MaximumRecords
	public int getMaximumRecords()
	{
		return MAXIMUM_RECORDS;
	}//End of getMaximumRecords
	
	//Getter to Return the value of RecordCount
	public int getRecordCount()
	{
		return recordCount;
	}//End of getRecordCount
	
	//Getter to Return the value of SearchIndex
	public int getSearchedIndex()
	{
		return searchedIndex;
	}//End of getSearchIndex
	
	//End of Getters
